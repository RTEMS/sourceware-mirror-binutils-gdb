# Copyright 2025 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test displaced stepping on AMD GPUs.

load_lib rocm.exp

standard_testfile .cpp

require allow_hipcc_tests

# Since GDB doesn't yet understand DWARF expressions generated by the HIP
# compiler, purposefully generate the binary without debug info.
if {[build_executable "failed to prepare" $testfile $srcfile {hip}]} {
    return
}

proc do_test {} {
    clean_restart
    gdb_load $::binfile

    with_rocm_gpu_lock {
	if {![runto_main]} {
	    return
	}

	gdb_test "with breakpoint pending on -- break do_an_addition" \
	    "Breakpoint $::decimal \\(do_an_addition\\) pending."

	gdb_test "continue" \
	    "Thread $::decimal hit Breakpoint $::decimal, $::hex in do_an_addition.*"

	gdb_test "with debug displaced on -- stepi" \
		"displaced_step_prepare_throw: prepared successfully.*$::hex in do_an_addition.*"

	gdb_test "continue" \
	    "Inferior 1 .* exited normally.*" \
	    "continue to end"
    }
}

do_test
