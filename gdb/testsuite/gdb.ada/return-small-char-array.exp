# Copyright 2025 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib "ada.exp"

require allow_ada_tests

standard_ada_testfile proc

set opts {}
lappend opts debug
if { [ada_fvar_tracking] } {
    lappend opts "additional_flags=-fvar-tracking"
}

if { [gdb_compile_ada $srcfile $binfile executable $opts] != "" } {
  return
}

clean_restart $testfile

set bp_location [gdb_get_line_number "STOP" $testdir/proc.adb]
runto "proc.adb:$bp_location"

gdb_test "print Value.Name(My_Value)" \
    { = "abcd"}

# Step into the function.  Don't do this by stepping, but by setting a
# breakpoint and continuing to it, to avoid the problem that varying line info
# may require us to step a different amount of times to land at the same
# location.
set bp_location_2 [gdb_get_line_number "STOP" $testdir/value.adb]
gdb_breakpoint value.adb:$bp_location_2
gdb_continue_to_breakpoint "STOP"

# and finish.
gdb_test "finish" \
    { = "abcd"}
