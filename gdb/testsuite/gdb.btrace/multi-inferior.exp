# This testcase is part of GDB, the GNU debugger.
#
# Copyright 2020-2025 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test that recording is per-inferior.
#
# When recording an inferior, threads from other inferiors, both existing
# and newly created, are not automatically recorded.
#
# Each inferior can be recorded separately.

require allow_btrace_tests

require !use_gdb_stub

standard_testfile
if [prepare_for_testing "failed to prepare" $testfile {} {debug}] {
    return -1
}

set host_binfile [gdb_remote_download host $binfile]

with_test_prefix "inferior 1" {
    if ![runto_main] {
	return -1
    }

    gdb_test_no_output "record btrace"
    gdb_test "step 4" "fun\.1.*"
    gdb_test "reverse-step" "fun\.1.*"
}

with_test_prefix "inferior 2" {
    gdb_test "add-inferior -exec $host_binfile" "Added inferior 2.*" \
	"add second inferior"
    gdb_test "inferior 2" "Switching to inferior 2.*"

    if ![runto_main] {
	return -1
    }

    gdb_test_no_output "record btrace"
    gdb_test "step 4" "fun\.1.*"
    gdb_test "reverse-step" "fun\.1.*"

    gdb_test "info record" "Replay in progress.*"
    gdb_test "record stop" "Process record is stopped.*"

    gdb_test "step" "fun\.1.*"
}

with_test_prefix "inferior 1" {
    gdb_test "inferior 1" "Switching to inferior 1.*"

    gdb_test "info record" "Replay in progress.*"
    gdb_test "reverse-finish" "fun\.1.*"
    gdb_test "record goto end" "fun\.1.*"
    gdb_test "step 2" "fun\.1.*"
    gdb_test "reverse-step 3"
}
