# Copyright 2013-2025 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

load_lib dwarf.exp

# This test can only be run on targets which support DWARF-2 and use gas.
require dwarf2_support

standard_testfile main.c dwz.S

# Create the DWARF.
set asm_file [standard_output_file $srcfile2]
Dwarf::assemble $asm_file {
    declare_labels partial_label int_label int_label2

    cu {} {
	partial_label: partial_unit {} {
	    subprogram {
		MACRO_AT_func { main }
	    }
	}
    }

    cu {} {
	compile_unit {
	    DW_AT_language @DW_LANG_C
	} {
	    int_label2: base_type {
		DW_AT_name int
		DW_AT_byte_size 4 sdata
		DW_AT_encoding @DW_ATE_signed
	    }

	    constant {
		DW_AT_name the_int
		DW_AT_type :$int_label2
		DW_AT_const_value 99 data1
	    }

	    constant {
		DW_AT_name other_int
		DW_AT_type :$int_label2
		DW_AT_const_value 99 data1
	    }
	}
    }

    cu {} {
	compile_unit {
	    DW_AT_language @DW_LANG_C
	} {
	    imported_unit {
		DW_AT_import $partial_label ref_addr
	    }

	    int_label: base_type {
		DW_AT_name int
		DW_AT_byte_size 4 sdata
		DW_AT_encoding @DW_ATE_signed
	    }

	    constant {
		DW_AT_name the_int
		DW_AT_type :$int_label
		DW_AT_const_value 23 data1
	    }
	}
    }
}

if {[prepare_for_testing "failed to prepare" $testfile "${asm_file} ${srcfile}" {}]} {
    return -1
}

if {![runto_main]} {
    return -1
}

gdb_test "p other_int" " = 99"
gdb_test "p the_int" " = 23"
