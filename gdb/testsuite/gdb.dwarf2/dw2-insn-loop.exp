# This testcase is part of GDB, the GNU debugger.

# Copyright 2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Check that stepping over an insn containing a loop to the start of that insn
# stops at the start.

load_lib dwarf.exp

require dwarf2_support

standard_testfile .c .S

lassign [function_range main $srcdir/$subdir/$srcfile] \
    main_start main_len

set main_start_line [gdb_get_line_number "main_start."]

set loop_label_line [gdb_get_line_number "loop_label:"]

set asm_file [standard_output_file $srcfile2]

Dwarf::assemble $asm_file {
    declare_labels lines_unit

    cu {} {
	DW_TAG_compile_unit {
	    {DW_AT_name $::srcfile}
	    {DW_AT_stmt_list $lines_unit DW_FORM_sec_offset}
	} {
	    declare_labels int_type

	    int_type: DW_TAG_base_type {
		{ DW_AT_byte_size 4 DW_FORM_sdata }
		{ DW_AT_encoding  @DW_ATE_signed }
		{ DW_AT_name int }
	    }

	    DW_TAG_subprogram {
		{ DW_AT_name main }
		{ DW_AT_low_pc $::main_start DW_FORM_addr }
		{ DW_AT_high_pc "$::main_start + $::main_len" DW_FORM_addr }
		{ type :$int_type }
	    }
	}
    }

    lines {} lines_unit {
	file_name $::srcfile 1
	program {
	    DW_LNE_set_address $::main_start
	    line $::main_start_line
	    DW_LNS_copy

	    DW_LNE_set_address main_label
	    line $::loop_label_line
	    DW_LNS_copy

	    DW_LNE_set_address "$::main_start + $::main_len"
	    DW_LNE_end_sequence
	}
    }
}

if { [prepare_for_testing "failed to prepare" $testfile \
	  [list $srcfile $asm_file] {nodebug}] } {
    return
}

if {![runto_main]} {
    return
}

delete_breakpoints

# Regression test for PR32000.  This used to hang, but it should stop at the
# first insn of the line.
gdb_test "next" "loop_label:"
